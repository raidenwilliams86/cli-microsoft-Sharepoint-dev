defaults: &defaults
  working_directory: ~/cli-microsoft365
  docker:
    - image: circleci/node:14.15.1

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/cli-microsoft365
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Restore dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths: .
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/cli-microsoft365
      - run:
          name: Test
          command: npm test
      - run:
          name: Run coveralls
          command: './node_modules/.bin/c8 report --reporter=text-lcov | ./node_modules/.bin/coveralls'
          environment:
            - COVERALLS_REPO_TOKEN: "PkAaAAWBp9rNYBYhA5YiBhezydqwgFKhm"
            - COVERALLS_SERVICE_NAME: "circle-ci"
      - store_artifacts:
          path: coverage
          prefix: coverage
  publish_next:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/cli-microsoft365
      - run:
          name: Write .npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Stamp beta to package version
          command: node scripts/update-package-version.js $CIRCLE_SHA1
      - run:
          name: Publish @next
          command: npm publish --tag next --access public
      - persist_to_workspace:
          root: .
          paths: .
  docker_next:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/cli-microsoft365
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Extract version from package
          command: |
            echo "export PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Wait for npm publish
          command: node scripts/wait-npm-publish.js next $PACKAGE_VERSION
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run: 
          name: Build :$PACKAGE_VERSION
          command: docker build --pull --rm -t m365pnp/cli-microsoft365:$PACKAGE_VERSION "." --build-arg CLI_VERSION=$PACKAGE_VERSION
      - run: 
          name: Publish :$PACKAGE_VERSION
          command: docker push m365pnp/cli-microsoft365:$PACKAGE_VERSION
      - run: 
          name: Build :next
          command: docker build --pull --no-cache --rm -t m365pnp/cli-microsoft365:next "." --build-arg CLI_VERSION=$PACKAGE_VERSION
      - run: 
          name: Publish :next
          command: docker push m365pnp/cli-microsoft365:next
  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/cli-microsoft365
      - run:
          name: Write .npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish
          command: npm publish --access public
  docker:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/cli-microsoft365
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Extract version from package
          command: |
            echo "export PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Wait for npm publish
          command: node scripts/wait-npm-publish.js latest $PACKAGE_VERSION
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run: 
          name: Build :$PACKAGE_VERSION
          command: docker build --pull --rm -t m365pnp/cli-microsoft365:$PACKAGE_VERSION "." --build-arg CLI_VERSION=$PACKAGE_VERSION
      - run: 
          name: Publish :$PACKAGE_VERSION
          command: docker push m365pnp/cli-microsoft365:$PACKAGE_VERSION
      - run: 
          name: Build :latest
          command: docker build --pull --no-cache --rm -t m365pnp/cli-microsoft365:latest "." --build-arg CLI_VERSION=$PACKAGE_VERSION
      - run: 
          name: Publish :latest
          command: docker push m365pnp/cli-microsoft365:latest
  deploy_docs:
    working_directory: ~/cli-microsoft365/docs
    docker:
      - image: circleci/python:3.6.6-jessie-node
    steps:
      - attach_workspace:
          at: ~/cli-microsoft365
      - add_ssh_keys:
          fingerprints:
            - "06:39:32:e4:a1:64:01:19:0e:61:a0:ad:6a:53:37:32"
      - run:
          name: Install MkDocs
          command: sudo pip install mkdocs
      - run:
          name: Install MkDocs theme
          command: sudo pip install mkdocs-material==3.1.0
      - run:
          name: Install PyMdown Extensions
          command: sudo pip install pymdown-extensions==6.0
      - run:
          name: Avoid hosts unknown for github
          command: echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Build docs
          command: mkdocs gh-deploy -m "[ci skip]"
  
workflows:
  version: 2
  check_pr:
    jobs:
      - build:
          filters:
            branches:
              ignore: /^(main)/
      - test:
          requires:
            - build
          filters:
            branches:
              ignore: /^(main)/
  release_next:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - test:
          requires:
            - build
          filters:
            branches:
              only: main
      - publish_next:
          requires:
            - test
          filters:
            branches:
              only: main
      - docker_next:
          requires:
            - publish_next
          filters:
            branches:
              only: main
      - deploy_docs:
          requires:
            - publish_next
          filters:
            branches:
              only: main
  release:
    jobs:
      - build:
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - test
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - docker:
          requires:
            - publish
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
